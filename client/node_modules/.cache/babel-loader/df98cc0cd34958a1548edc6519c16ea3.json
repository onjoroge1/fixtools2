{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimnj\\\\Downloads\\\\fixtools\\\\fixtools\\\\client\\\\src\\\\Pages\\\\DetailPdf.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport HeaderNav from '../components/common/HeaderNav';\nimport Footer from '../components/home/Footer';\nimport { Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { saveAs } from 'file-saver';\nimport data from '../db.json';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailPdf() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n\n  const axios = require('axios');\n\n  const [cards, setCards] = useState(null);\n  const [pickFile, setpickFile] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(\"/images/card-icon.png\");\n  const [fileLoading, setFileLoading] = useState(false);\n  const [responseSave, setResponseSave] = useState('');\n  useEffect(() => {\n    const filteredCards = data.cards.find(card => card.id == id);\n    setCards(filteredCards);\n  }, [data.cards]);\n\n  const handleChose = event => {\n    setFileLoading(true);\n    const imgFile = event.target.files[0];\n    const cardType = cards.type;\n    setSelectedFile(event.target.files[0]);\n    const formData = new FormData();\n    formData.append('file', imgFile);\n\n    if (cardType == 'application/pdf') {\n      fetch('/api/image.png', {\n        method: 'POST',\n        body: formData\n      }).then(async res => {\n        setFileLoading(false);\n        console.log(res, 'here is ressponse');\n\n        if (res.status == 200) {\n          const resp = await res.blob();\n          setResponseSave(resp);\n          setpickFile(true); // saveAs(resp , `new${Date.now()}.docx`)\n        } else {\n          alert('Please choose file with pdf extension');\n        }\n      });\n    } else {\n      fetch('/api/fileUpload', {\n        method: 'POST',\n        body: formData\n      }).then(async res => {\n        setFileLoading(false);\n\n        if (res.status == 200) {\n          const resp = await res.blob();\n          setResponseSave(resp);\n          setpickFile(true);\n        } else {\n          alert('Please choose file with docx or doc extension');\n        }\n      });\n    }\n  };\n\n  const handleRemove = () => {\n    setpickFile(false);\n  };\n\n  if (!cards) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }, this);\n  }\n\n  const downloadHandler = () => {\n    console.log(selectedFile, 'selectedFile');\n    setpickFile(false);\n\n    if (selectedFile.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' || selectedFile.type === 'application/msword') {\n      saveAs(responseSave, `new${Date.now()}.pdf`);\n    } else if (selectedFile.type === 'application/pdf') {\n      saveAs(responseSave, `new${Date.now()}.docx`);\n    } else {\n      alert('Your file not a right for convertable');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-hero\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-hero-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-hero-content-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cards.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-hero-content-des\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cards.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), fileLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this) : null, pickFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-hero-content-butn\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn btn-outline-danger\",\n            onClick: handleRemove,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => downloadHandler(),\n            className: \"btn btn-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 103\n            }, this), \" Download\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-hero-content-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputTag\",\n            children: [\"CHOOSE FILE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              disabled: fileLoading,\n              id: \"inputTag\",\n              type: \"file\",\n              onChange: handleChose,\n              className: \"detail-hero-content-nav-home-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailPdf, \"UikfRk8nxPUXwFBTZxLKerZNs6o=\", false, function () {\n  return [useParams];\n});\n\n_c = DetailPdf;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailPdf\");","map":{"version":3,"names":["useEffect","useState","HeaderNav","Footer","Button","useParams","saveAs","data","Spinner","DetailPdf","id","axios","require","cards","setCards","pickFile","setpickFile","selectedFile","setSelectedFile","fileLoading","setFileLoading","responseSave","setResponseSave","filteredCards","find","card","handleChose","event","imgFile","target","files","cardType","type","formData","FormData","append","fetch","method","body","then","res","console","log","status","resp","blob","alert","handleRemove","downloadHandler","Date","now","title","desc","name"],"sources":["C:/Users/kimnj/Downloads/fixtools/fixtools/client/src/Pages/DetailPdf.jsx"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport HeaderNav from '../components/common/HeaderNav'\nimport Footer from '../components/home/Footer'\nimport { Button } from 'react-bootstrap'\nimport { useParams } from 'react-router-dom'\nimport {saveAs} from 'file-saver'\nimport data from '../db.json';\nimport Spinner from 'react-bootstrap/Spinner';\n\n\nexport default function DetailPdf() {\n    const {id} = useParams();\n    const axios = require('axios');\n\n    const [cards, setCards] = useState(null);\n    const [pickFile, setpickFile] = useState(false)\n    const [selectedFile, setSelectedFile] = useState(\"/images/card-icon.png\");\n    const [fileLoading, setFileLoading] = useState(false);\n    const [responseSave, setResponseSave] = useState('');\n\n\n    useEffect(() => {\n        const filteredCards = data.cards.find(card => card.id == id)\n        setCards(filteredCards)\n    },[data.cards])\n\n\n    const handleChose = (event) =>{\n        setFileLoading(true)\n        const imgFile = event.target.files[0];\n        const cardType = cards.type;\n        setSelectedFile(event.target.files[0]);\n\n\n        const formData = new FormData();\n        formData.append('file', imgFile);\n\n\n            if (cardType ==  'application/pdf') {\n                fetch('/api/image.png' , {\n                    method: 'POST',\n                    body:formData\n                })\n                    .then(async (res) =>{\n                        setFileLoading(false)\n                        console.log(res, 'here is ressponse')\n                        if(res.status == 200){\n                            const resp = await  res.blob();\n                            setResponseSave(resp)\n                            setpickFile(true)\n                            // saveAs(resp , `new${Date.now()}.docx`)\n                        }\n                        else {\n                            alert('Please choose file with pdf extension')\n                        }\n\n                    })\n            }\n            else {\n                    fetch('/api/fileUpload' , {\n                    method: 'POST',\n                    body:formData\n                })\n                    .then(async (res) =>{\n                        setFileLoading(false)\n                        if(res.status == 200){\n                            const resp = await  res.blob();\n                            setResponseSave(resp)\n                            setpickFile(true)\n                        }\n                        else {\n                            alert('Please choose file with docx or doc extension')\n                        }\n\n                    })\n\n            }\n\n\n\n\n\n\n        \n    }\n\n    \n\n    \n    const handleRemove = () =>{\n        setpickFile(false);\n    }\n\n    if (!cards) {\n        return<div className=\"loader\">\n            <h1>Loading</h1>\n        </div>\n         \n    }\n\n    const downloadHandler = () => {\n        console.log(selectedFile , 'selectedFile')\n        setpickFile(false);\n        if(selectedFile.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' || selectedFile.type === 'application/msword'){\n            saveAs(responseSave , `new${Date.now()}.pdf`)\n\n        }\n        else if(selectedFile.type === 'application/pdf' ){\n            saveAs(responseSave , `new${Date.now()}.docx`)\n        }\n        else{\n            alert('Your file not a right for convertable')\n        }\n    }\n\n  return (\n    \n    <div>\n\n        <div className=\"detail-hero\">\n            <HeaderNav />\n            <div className=\"detail-hero-content\">\n                    <div className=\"detail-hero-content-heading\">\n                        <h1>{cards.title}</h1>\n                    </div>\n                    <div className=\"detail-hero-content-des\">\n                        <p>{cards.desc}</p>\n                    </div>\n                {\n                    fileLoading ?\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                        : null\n                }\n\n\n\n                {\n                        pickFile ?(\n                            \n                            \n                            <div className=\"detail-hero-content-butn\">\n                                <p>{selectedFile.name}</p>\n                                <a className='btn btn-outline-danger' onClick={handleRemove}>Remove</a>\n\n                                <Button onClick={() => downloadHandler()} className='btn btn-primary'><i className=\"fa fa-download\"></i> Download</Button>\n                            </div>\n\n                        ):\n                        (\n                        <div className=\"detail-hero-content-nav\">\n                            <label htmlFor=\"inputTag\">\n                                CHOOSE FILE\n                                <input disabled={fileLoading} id=\"inputTag\" type=\"file\"  onChange={handleChose}  className=\"detail-hero-content-nav-home-btn\"/>\n                            </label>\n                        </div> \n\n                        )\n\n                    }\n\n             </div>\n        </div>\n        \n        <Footer />\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}